@inject ILocalStorageService localStorage

<div class="card col-2 m-2 text-white" style="width:200px; background-color:rgba(255,255,255,0.1);">
    <img class = "card-img-top" style="height:150px;" src="@Product.Imgurl"/>
    <div class="card-body">
        <h5>@Product.Name</h5>
        <p>@Product.Description</p>
        <p>@Product.Price.ToString("N0") Ft.</p>
        <AuthorizeView>
            <Authorized>
                <button class="btn btn-danger" @onclick="AddItem">Add</button>
            </Authorized>
        </AuthorizeView>
    </div>
</div>

@code {
    [Parameter]
    public Product Product{ get; set; }

    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }


    public async Task AddItem()
    {
        var userEmail = await GetUserFromAuthState.GetEmailFromAuthUser(authenticationState);
        if(userEmail is not "")
        {
            if(await localStorage.ContainKeyAsync(userEmail))
            {
                var cart = await localStorage.GetItemAsync<List<string>>(userEmail);
                cart.Add(Product.Id.ToString());
                cart.Sort();
                await localStorage.SetItemAsync(userEmail,cart);
            }
            else
            {
                await localStorage.SetItemAsync(userEmail,new List<string>() {Product.Id.ToString()});
            }
        }   
    }

}
