@page "/Profile"
@inject ProfileVM _profileVM
@inject NavigationManager _navigationManager

<AuthorizeView>
    <Authorized>
        <div class="container text-white">
        <h3 style="text-align:center;">Profile</h3>
            <div>
                <h2 class="col-6">Email</h2>
                <input @bind = "@_profileVM.User.Email" placeholder="email" class="form-control"></input>
            </div>
            <div>
                <h2 class="col-6">Password</h2>
                <button class="btn btn-warning" @onclick="()=>{showChangePassword = !showChangePassword;}">Change password</button>
            </div>
            @if(showChangePassword)
            {
                <div>
                    @if(!collapsedError)
                    {
                        <div class = "alert alert-danger">
                            <p>@ErrorMessage</p>
                        </div>
                    }
                    <div>
                        <h2 class="col-6">Current Password</h2>
                        <input type="password" @bind=@currentPassword placeholder="current password" class="form-control">
                    </div>
                    <div>
                        <h2 class="col-6">New Password</h2>
                        <input type="password" @bind=@newPassword placeholder="new password" class="form-control">
                    </div>
                    <div>
                        <h2 class="col-6">New Password again</h2>
                        <input type="password" @bind=@newPasswordAgain placeholder="new password again" class="form-control">
                    </div>
                    <button class="btn btn-danger" @onclick=@ChangePassword>Change password</button>
                </div>
            }

            <div>
                <h2 class="col-6">Role</h2>
                <input @bind = "@_profileVM.User.Role" placeholder="role" class="form-control"></input>
            </div>
            <div class="pt-2">
                <button class="btn btn-primary" @onclick = "@UpdateProfile">Update Profile</button>
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }

    private string currentPassword;
    private string newPassword;
    private string newPasswordAgain;
    private bool collapsedError = true;
    public bool showChangePassword = false;
    public string content = "Profile updated successfully!";
    private string ErrorMessage = "";


    protected override async Task OnInitializedAsync()
    {
        var userID = await GetUserFromAuthState.GetIdFromAuthUser(authenticationState);

        if(userID is not -1)
        {
            _profileVM.User.Id = userID;
            await _profileVM.GetProfile();
        }
        else
        {
            _navigationManager.NavigateTo("/");
        }
    }

    public async Task ChangePassword()
    {
        bool isCurrentPasswordMatching = await _profileVM.CheckCurrentPassword(currentPassword);
        if (!isCurrentPasswordMatching)
        {
            ErrorMessage = "Current password is not matching.";
            collapsedError = false;
            return;
        }

    }

    public async Task UpdateProfile()
    {
        var result = await _profileVM.UpdateProfile();
        if(!result.IsSuccessStatusCode)
        {
            content = "Error updating profile!";
        }
    }
}
